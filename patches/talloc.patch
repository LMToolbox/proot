--- wscript.orig	2025-02-06 13:36:55.107552000 +0100
+++ wscript	2025-09-25 00:54:08.661912824 +0200
@@ -97,14 +97,15 @@
         if bld.CONFIG_SET('HAVE_PTHREAD'):
             testsuite_deps += ' pthread'
 
-        bld.SAMBA_BINARY('talloc_testsuite',
-                         'testsuite_main.c testsuite.c',
-                         testsuite_deps,
-                         install=False)
-
-        bld.SAMBA_BINARY('talloc_test_magic_differs_helper',
-                         'test_magic_differs_helper.c',
-                         'talloc', install=False)
+        if not getattr(bld.env, 'CROSS_COMPILE', False):
+            bld.SAMBA_BINARY('talloc_testsuite',
+                             'testsuite_main.c testsuite.c',
+                             testsuite_deps,
+                             install=False)
+
+            bld.SAMBA_BINARY('talloc_test_magic_differs_helper',
+                             'test_magic_differs_helper.c',
+                             'talloc', install=False)
 
     else:
         private_library = True
@@ -137,7 +138,7 @@
                 abi_directory='ABI',
                 abi_match='pytalloc_* _pytalloc_*',
                 private_library=private_library,
-                public_headers=('' if private_library else 'pytalloc.h'),
+                public_headers=('' if private_library else 'talloc.h'),
                 pc_files='pytalloc-util.pc',
                 enabled=bld.PYTHON_BUILD_IS_ENABLED()
                 )
@@ -147,16 +148,21 @@
                          enabled=bld.PYTHON_BUILD_IS_ENABLED(),
                          realname='talloc.so')
 
-        bld.SAMBA_PYTHON('test_pytalloc',
-                         'test_pytalloc.c',
-                         deps=name,
-                         enabled=bld.PYTHON_BUILD_IS_ENABLED(),
-                         realname='_test_pytalloc.so',
-                         install=False)
+        if not getattr(bld.env, 'CROSS_COMPILE', False):
+            bld.SAMBA_PYTHON('test_pytalloc',
+                             'test_pytalloc.c',
+                             deps=name,
+                             enabled=bld.PYTHON_BUILD_IS_ENABLED(),
+                             realname='_test_pytalloc.so',
+                             install=False)
 
 
 def testonly(ctx):
     '''run talloc testsuite'''
+    if getattr(ctx.env, 'CROSS_COMPILE', False):
+        print("Skipping talloc tests (cross-compile)")
+        return 0
+
     import samba_utils
 
     samba_utils.ADD_LD_LIBRARY_PATH('bin/shared')
@@ -177,16 +183,20 @@
     print("python testsuite returned %d" % pyret)
     sys.exit(ret or magic_ret or pyret)
 
+
 # WAF doesn't build the unit tests for this, maybe because they don't link with talloc?
 # This forces it
 def test(ctx):
     Options.commands.append('build')
     Options.commands.append('testonly')
 
+
 def dist():
     '''makes a tarball for distribution'''
     samba_dist.dist()
 
+
 def reconfigure(ctx):
     '''reconfigure if config scripts have changed'''
     samba_utils.reconfigure(ctx)
+
